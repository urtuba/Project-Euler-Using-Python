# Project Euler 8 - Largest Product in a Series
# GitHub: urtuba

def largest_product_in_series(num:str, length:int) -> int:
    '''
    Takes a string consists of digits, returns largest product of consecutive
    digits.

    :param num: string of digits, large number
    :param length: length of consecutive digits
    :return: largest product
    '''
    num_size = len(num)
    numbers = []
    for i in range(num_size - length + 1):
        if '0' not in num[i:i+length]:
            numbers.append(num[i:i+length])
    
    result = 1
    for num in numbers:
        temp_result = 1
        for digit in num:
            temp_result *= int(digit)
        if temp_result > result:
            result = temp_result
    return result

if __name__ == '__main__':
    num = '731671765313306249192251196744265747423553491949349698352031277450'+\
        '632623957831801698480186947885184385861560789112949495459501737958331'+\
        '952853208805511125406987471585238630507156932909632952274430435576689'+\
        '664895044524452316173185640309871112172238311362229893423380308135336'+\
        '276614282806444486645238749303589072962904915604407723907138105158593'+\
        '079608667017242712188399879790879227492190169972088809377665727333001'+\
        '053367881220235421809751254540594752243525849077116705560136048395864'+\
        '467063244157221553975369781797784617406495514929086256932197846862248'+\
        '283972241375657056057490261407972968652414535100474821663704844031998'+\
        '900088952434506585412275886668811642717147992444292823086346567481391'+\
        '912316282458617866458359124566529476545682848912883142607690042242190'+\
        '226710556263211111093705442175069416589604080719840385096245544436298'+\
        '123098787992724428490918884580156166097919133875499200524063689912560'+\
        '717606058861164671094050775410022569831552000559357297257163626956188'+\
        '2670428252483600823257530420752963450'

    result = largest_product_in_series(num, 13)
    print(result)